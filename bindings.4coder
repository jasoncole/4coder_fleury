keys_global =
{
    // NOTE(rjf): meta
    { "exit_4coder" ,                             "Q", "Control" },
    
    // NOTE(rjf): files
    { "f4_setup_new_project",                     "ForwardSlash", "Control" },
    { "interactive_kill_buffer",                  "K", "Control" },
    { "f4_recent_files_menu",                     "I", "Control" },
    { "save",                                     "S", "Control" },
    { "save_all_dirty_buffers",                   "S", "Control", "Shift" },
    
    // NOTE(rjf): View
    { "center_view",                 "A", "Control" },
    { "left_adjust_view",            "E", "Control", "Shift" },
    
    // note(rjf): project
    { "project_fkey_command",                     "F1" },
    { "project_fkey_command",                     "F2" },
    { "project_fkey_command",                     "F3" },
    { "project_fkey_command",                     "F4" },
    { "project_fkey_command",                     "F5" },
    { "project_fkey_command",                     "F6" },
    { "project_fkey_command",                     "F7" },
    { "project_fkey_command",                     "F8" },
    { "project_fkey_command",                     "F9" },
    { "project_fkey_command",                     "F10" },
    { "project_fkey_command",                     "F11" },
    { "project_fkey_command",                     "F12" },
    
    // NOTE(rjf): panels
    { "open_panel_vsplit", "T", "Control" },
    { "open_panel_hsplit", "T", "Control", "Shift" },
    { "close_panel", "W", "Control" },
    { "toggle_fullscreen", "F", "Control" },
    
    // NOTE(rjf): Meta
    { "change_active_panel",         "Tab", "Control" },
    { "swap_panels",                 "Tab", "Control", "Shift" },
    { "if_read_only_goto_position",  "Return" },
    { "if_read_only_goto_position_same_panel", "Return", "Shift" },
    
    // NOTE(jason): shared behavior
    { "delete_char",                  "Delete" },
    { "backspace_char",               "Backspace" },
    { "move_up",                      "Up" },
    { "move_down",                    "Down" },
    { "move_up_to_blank_line_end",    "Up", "Shift" },
    { "move_down_to_blank_line_end",  "Down", "Shift" },
    { "f4_move_left",                 "Left" },
    { "f4_move_right",                "Right" },
    { "seek_end_of_line",             "Right", "Shift" },
    { "f4_home_first_non_whitespace", "Left", "Shift" },
    { "page_up",                      "PageUp" },
    { "page_down",                    "PageDown" },
    { "goto_beginning_of_file",       "PageUp", "Control" },
    { "goto_end_of_file",             "PageDown", "Control" },
    { "save_all_dirty_buffers",       "S", "Control", "Shift" },
    { "f4_code_peek",                 "Y", "Control" },
    { "change_to_build_panel",        "B", "Control", "Shift" }
    
};

keys_global_2 =
{
    { "keyboard_macro_start_recording" ,          "U",      "Control"                  },
    { "keyboard_macro_finish_recording",          "U",      "Control", "Shift"         },
    { "keyboard_macro_replay",                    "U",      "Alt"                      },
	{ "build_in_build_panel",					 "B", "Control" },
    
    // NOTE(rjf): Files
    { "interactive_new",                          "N",      "Control"                  },
    { "f4_setup_new_project",                     "N",      "Control", "Shift"         },
    { "interactive_open_or_new",                  "O",      "Control"                  },
    { "f4_interactive_open_or_new_in_project",    "O",      "Alt"                      },
    { "f4_open_project",                          "O",      "Control", "Shift"         },
    { "interactive_kill_buffer",                  "K",      "Control"                  },
    { "interactive_switch_buffer",                "I",      "Control"                  },
    { "save_all_dirty_buffers",                   "S",      "Control", "Shift"         },
    { "f4_recent_files_menu",                     "V",      "Alt"                      },
    
    // NOTE(rjf): Jump Lists
    { "goto_next_jump",                           "N",      "Alt"                      },
    { "goto_prev_jump",                           "N",      "Alt",     "Shift"         },
    { "goto_first_jump",                          "M",      "Alt",     "Shift"         }
};

keys_file =
{
    //{ "switch_to_keybinding_1", "I" },
    
    // NOTE(rjf): Q/E Arrow Keys
    { "f4_move_left",                               "A" },
    { "f4_move_left_token_boundary",                "Q", },
    { "move_left_alpha_numeric_or_camel_boundary",  "Q", "Shift" },
    { "f4_move_right",                              "D" },
    { "f4_move_right_token_boundary",               "E", },
    { "move_right_alpha_numeric_or_camel_boundary", "E", "Shift" },
    
    // NOTE(rjf): Up/Down Arrow Keys
    { "move_up",                          "W" },
    { "move_down",                        "S" },
    { "move_up_to_blank_line_end",        "W", "Shift" },
    { "move_down_to_blank_line_end",      "S", "Shift" },
    
    // NOTE(rjf): Alternative Movement Keys
    { "seek_end_of_line",             "D", "Shift" },
    { "f4_home_first_non_whitespace", "A", "Shift" },
    
    // NOTE(rjf): Mark
    { "set_mark",                    "Space" },
    { "cursor_mark_swap",            "Space", "Shift" },
    
    // NOTE(rjf): Search
    { "search_identifier", "Semicolon" },
    { "f4_search",         "Semicolon", "Shift" },
    { "goto_line",         "Semicolon", "Alt" },
    
    { "list_all_locations_of_identifier",              "F" },
    { "list_all_locations",                            "F", "Shift" },
    { "list_all_substring_locations_case_insensitive", "F", "Alt" },
    
    /* 
    // NOTE(rjf): Replace
    { "replace_in_range",            "A", "Control" },
    { "query_replace",               "Q", "Control" },
    { "query_replace_identifier",    "Q", "Control", "Shift" },
    { "query_replace_selection",     "Q", "Alt" },
    */
    
    // NOTE(rjf): Clipboard
    // NOTE(jason): fix shift paste to put on new line
    { "copy",                       "L" },
    //{ "jason_copy_line_range",      "L", "Shift" },
    { "paste_and_indent",           "P" },
    //{ "jason_paste_new_line",       "P",  "Shift" },
    { "project_fkey_command",                     "9", "Control" },
    
    // NOTE(rjf): Deletion
    { "delete_range",                "K" },
    //{ "jason_delete_line_range",     "K",  "Shift" },
    
    
    // NOTE(rjf): File
    { "redo",                        "U", "Shift" },
    { "undo",                        "U" },
    
    
    // NOTE(rjf): Code Peek
    { "f4_code_peek_yank",     "Y" },
    { "f4_code_peek_clear",    "Y", "Shift" },
    
    // NOTE(rjf): Go To Def
    { "f4_go_to_definition",            "J" },
    { "f4_go_to_definition_same_panel", "J", "Shift" },
    { "f4_toggle_enclosure_side",       "J", "Alt" }, 
    //{ "f4_search_for_definition__project_wide", "J", "Control" },
    //{ "f4_search_for_definition__current_file", "J", "Control", "Shift" },
    
    
    { "keyboard_macro_start_recording" ,          "M" },
    { "keyboard_macro_finish_recording",          "M", "Shift" },
    { "keyboard_macro_replay",                    "Period" },
    
    { "build_in_build_panel",                     "B" },
    { "f4_toggle_compilation_expand",             "B", "Shift" },
    
    { "command_lister",                           "BackwardSlash" },
    { "project_command_lister",                   "BackwardSlash", "Shift" },
    { "interactive_open_or_new",                  "ForwardSlash" }
};

keys_file_1 =
{
    //{ "switch_to_keybinding_0", "Escape" },
    //{ "switch_to_keybinding_0", "Backspace", "Shift" }
};

keys_file_2 =
{
    // NOTE(rjf): None => Characters
    //            Ctrl => Tokens
    //            Alt  => Alphanumeric/Camel
    
    // NOTE(rjf): Backspace/Delete
    { "delete_char",                                  "Delete"               },
    { "f4_delete_token_boundary",                     "Delete",    "Control" },
    { "f4_delete_alpha_numeric_or_camel_boundary",    "Delete",    "Alt"     },
    { "backspace_char",                               "Backspace"            },
    { "f4_backspace_token_boundary",                  "Backspace", "Control" },
    { "f4_backspace_alpha_numeric_or_camel_boundary", "Backspace", "Alt"     },
    
    // NOTE(rjf): Left/Right Arrow Keys
    { "f4_move_left",                               "Left"              },
    { "f4_move_left_token_boundary",                "Left", "Control"   },
    { "move_left_alpha_numeric_or_camel_boundary",  "Left", "Alt"       },
    { "f4_move_right",                              "Right"             },
    { "f4_move_right_token_boundary",               "Right", "Control"  },
    { "move_right_alpha_numeric_or_camel_boundary", "Right", "Alt"      },
    
    // NOTE(rjf): Up/Down Arrow Keys
    { "move_up",                "Up" },
    { "move_down",              "Down" },
    { "move_up_to_blank_line_end",        "Up", "Control" },
    { "move_down_to_blank_line_end",      "Down", "Control" },
    { "move_line_up",                     "Up", "Alt" },
    { "move_line_down",                   "Down", "Alt" },
    { "f4_move_to_prev_divider_comment",  "Up", "Control", "Shift" },
    { "f4_move_to_next_divider_comment",  "Down", "Control", "Shift" },
    { "f4_move_up_token_occurrence",      "Up", "Control", "Alt" },
    { "f4_move_down_token_occurrence",    "Down", "Control", "Alt" },
    
    // NOTE(rjf): Alternative Movement Keys
    { "seek_end_of_line",             "End" },
    { "f4_home_first_non_whitespace", "Home" },
    { "page_up",                "PageUp" },
    { "page_down",              "PageDown" },
    { "goto_beginning_of_file", "PageUp", "Control" },
    { "goto_end_of_file",       "PageDown", "Control" },
    
    // NOTE(rjf): Search
    { "f4_search",                   "F", "Control" },
    { "f4_reverse_search",           "R", "Control" },
    { "list_all_locations",          "F", "Control", "Shift" },
    { "list_all_substring_locations_case_insensitive", "F", "Alt" },
    { "goto_line",                   "G", "Control" },
    { "list_all_locations_of_selection",  "G", "Control", "Shift" },
    { "search_identifier",           "T", "Control" },
    { "list_all_locations_of_identifier", "T", "Control", "Shift" },
    
    // NOTE(rjf): Replace
    { "replace_in_range",            "A", "Control" },
    { "query_replace",               "Q", "Control" },
    { "query_replace_identifier",    "Q", "Control", "Shift" },
    { "query_replace_selection",     "Q", "Alt" },
    
    // NOTE(rjf): Clipboard
    { "copy",                        "C", "Control" },
    { "paste_and_indent",            "V", "Control" },
    { "paste_next_and_indent",       "V", "Control", "Shift" },
    { "cut",                         "X", "Control" },
    
    // NOTE(rjf): Deletion
    { "delete_line",                 "D", "Control" },
    
    // NOTE(rjf): Insertion
    { "duplicate_line",              "L", "Control" },
    
    // NOTE(rjf): View
    { "center_view",                 "E", "Control" },
    { "left_adjust_view",            "E", "Control", "Shift" },
    
    // NOTE(rjf): File
    { "kill_buffer",                 "K", "Control", "Shift" },
    { "reopen",                      "O", "Alt", "Shift" },
    { "save",                        "S", "Control" },
    { "save_all_dirty_buffers",      "S", "Control", "Shift" },
    { "redo",                        "Y", "Control" },
    { "undo",                        "Z", "Control" },
    { "view_buffer_other_panel",     "1", "Control" },
    
    // NOTE(rjf): Meta
    { "if_read_only_goto_position",  "Return" },
    { "if_read_only_goto_position_same_panel", "Return", "Shift" },
    
    // NOTE(rjf): Go To Def
    { "f4_go_to_definition",   "Return", "Control" },
    { "f4_go_to_definition_same_panel", "Return", "Control", "Shift" }
};

keys_code =
{
    { "f4_comment_selection",       "C", "Control" },
    { "f4_uncomment_selection",     "C", "Control", "Shift", },
    { "f4_autocomplete_or_indent",  "Tab" },
    { "f4_unindent",                "Tab", "Shift" },
    //{ "word_complete_drop_down",    "Tab", "Shift", "Control" },
    { "open_long_braces",           "LeftBracket", "Shift"}
};

keys_code_1 =
{
    { "f4_comment_selection",       "C", "Control" },
    { "f4_uncomment_selection",     "C", "Control", "Shift", },
    { "f4_autocomplete_or_indent",  "Tab" },
    { "f4_unindent",                "Tab", "Shift" },
    //{ "word_complete_drop_down",    "Tab", "Shift", "Control" },
    { "open_long_braces",           "LeftBracket", "Shift"}
};


keys_code_2 = 
{
    { "f4_autocomplete_or_indent", "Tab" },
    { "f4_unindent", "Tab", "Shift" },
    { "open_long_braces", "LeftBracket", "Shift"}
}